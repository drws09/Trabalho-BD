CREATE DATABASE WORLD_CUPS CHARSET = utf8mb4 COLLATE = utf8mb4_general_ci;

USE WORLD_CUPS;

CREATE TABLE COUNTRY (
id_host INT NOT NULL PRIMARY KEY,
name VARCHAR(80)
);

CREATE TABLE TEAM (
id_team INT NOT NULL PRIMARY KEY,
name VARCHAR(80),
confederation VARCHAR(25),
participations SMALLINT,
-- titles SMALLINT, -- pegar pela soma
-- second_places SMALLINT, -- pegar pela soma
-- third_places SMALLINT, -- pegar pela soma
-- fourth_places SMALLINT, -- pegar pela soma
games SMALLINT,
wins SMALLINT,
draws SMALLINT,
losses SMALLINT,
goals_scored SMALLINT,
goals_against SMALLINT
);

CREATE TABLE PLAYER (
id_player INT NOT NULL PRIMARY KEY,
name VARCHAR(80),
position VARCHAR(25),
participations SMALLINT,
titles SMALLINT,
games SMALLINT,
wins SMALLINT,
draws SMALLINT,
losses SMALLINT,
goals SMALLINT,
yellow_cards SMALLINT,
red_cards SMALLINT,
team_id INT,
FOREIGN KEY (team_id) REFERENCES TEAM (id_Team) ON DELETE CASCADE
);

CREATE TABLE WORLD_CUP (
id_world_cup INT NOT NULL PRIMARY KEY,
year SMALLINT,
host_id INT,
edition VARCHAR(10),
number_participants SMALLINT,
champion INT,
runner_up INT,
third_place INT,
fourth_place INT,
FOREIGN KEY (host_id) REFERENCES COUNTRY(id_host) ON DELETE CASCADE,
FOREIGN KEY (champion) REFERENCES TEAM(id_team) ON DELETE CASCADE,
FOREIGN KEY (runner_up) REFERENCES TEAM(id_team) ON DELETE CASCADE,
FOREIGN KEY (third_place) REFERENCES TEAM(id_team) ON DELETE CASCADE,
FOREIGN KEY (fourth_place) REFERENCES TEAM(id_team) ON DELETE CASCADE
);

CREATE TABLE GOLDEN_BALL (
id_golden_ball INT NOT NULL PRIMARY KEY,
world_cup_id INT,
player_id INT,
FOREIGN KEY (world_cup_id) REFERENCES WORLD_CUP(id_world_cup) ON DELETE CASCADE,
FOREIGN KEY (player_id) REFERENCES PLAYER(id_player) ON DELETE CASCADE
);

CREATE TABLE SILVER_BALL (
id_silver_ball INT NOT NULL PRIMARY KEY,
world_cup_id INT,
player_id INT,
FOREIGN KEY (world_cup_id) REFERENCES WORLD_CUP(id_world_cup) ON DELETE CASCADE,
FOREIGN KEY (player_id) REFERENCES PLAYER(id_player) ON DELETE CASCADE
);

CREATE TABLE BRONZE_BALL (
id_Bronze_Ball INT NOT NULL PRIMARY KEY,
world_cup_id INT,
player_id INT,
FOREIGN KEY (world_cup_id) REFERENCES WORLD_CUP(id_world_cup) ON DELETE CASCADE,
FOREIGN KEY (player_id) REFERENCES PLAYER(id_player) ON DELETE CASCADE
);

CREATE TABLE GOLDEN_BOOT (
id_golden_boot INT NOT NULL PRIMARY KEY,
world_cup_id INT,
player_id INT,
games SMALLINT,
goals SMALLINT,
FOREIGN KEY (world_cup_id) REFERENCES WORLD_CUP(id_world_cup) ON DELETE CASCADE,
FOREIGN KEY (player_id) REFERENCES PLAYER(id_player) ON DELETE CASCADE
);

CREATE TABLE SILVER_SHOE (
id_Silver_Shoe INT NOT NULL PRIMARY KEY,
world_cup_id INT,
player_id INT,
games SMALLINT,
goals SMALLINT,
FOREIGN KEY (world_cup_id) REFERENCES WORLD_CUP(id_world_cup) ON DELETE CASCADE,
FOREIGN KEY (player_id) REFERENCES PLAYER(id_player) ON DELETE CASCADE
);

CREATE TABLE BRONZE_SHOE (
id_Bronze_Shoe INT NOT NULL PRIMARY KEY,
world_cup_id INT,
player_id INT,
games SMALLINT,
goals SMALLINT,
FOREIGN KEY (world_cup_id) REFERENCES WORLD_CUP(id_world_cup) ON DELETE CASCADE,
FOREIGN KEY (player_id) REFERENCES PLAYER(id_player) ON DELETE CASCADE
);

CREATE TABLE BEST_YOUNG_PLAYER (
id_best_young_player INT NOT NULL PRIMARY KEY,
world_cup_id INT,
player_id INT,
FOREIGN KEY (world_cup_id) REFERENCES WORLD_CUP(id_world_cup) ON DELETE CASCADE,
FOREIGN KEY (player_id) REFERENCES PLAYER(id_player) ON DELETE CASCADE
);

CREATE TABLE FAIR_PLAY (
id_fair_play INT NOT NULL PRIMARY KEY,
world_cup_id INT,
team_id INT,
FOREIGN KEY (world_cup_id) REFERENCES WORLD_CUP(id_world_cup) ON DELETE CASCADE,
FOREIGN KEY (team_id) REFERENCES TEAM(id_team) ON DELETE CASCADE
);

CREATE TABLE GOLDEN_GLOVE (
id_golden_glove INT NOT NULL PRIMARY KEY,
world_cup_id INT,
player_id INT,
FOREIGN KEY (world_cup_id) REFERENCES WORLD_CUP(id_world_cup) ON DELETE CASCADE,
FOREIGN KEY (player_id) REFERENCES PLAYER(id_player) ON DELETE CASCADE
);

CREATE TABLE CITY (
id_city INT NOT NULL PRIMARY KEY,
name VARCHAR(80),
country_id INT,
FOREIGN KEY (country_id) REFERENCES COUNTRY(id_host) ON DELETE CASCADE
);

CREATE TABLE STADIUM (
id_stadium INT NOT NULL PRIMARY KEY,
name VARCHAR(80),
capacity INT,
city_id INT,
FOREIGN KEY (city_id) REFERENCES CITY(id_city) ON DELETE CASCADE
);

CREATE TABLE COACH (
id_coach INT NOT NULL PRIMARY KEY,
name VARCHAR(80),
nationality VARCHAR(80),
participations SMALLINT,
titles SMALLINT,
games SMALLINT,
wins SMALLINT,
draws SMALLINT,
losses SMALLINT,
goals_scored SMALLINT,
goals_against SMALLINT
);

CREATE TABLE REFEREE (
id_referee INT NOT NULL PRIMARY KEY,
name VARCHAR(80),
nationality VARCHAR(80)
);

CREATE TABLE GAME (
id_game INT NOT NULL PRIMARY KEY,
world_cup_id INT,
description VARCHAR(80),
data DATE,
stadium_id INT,
attendance INT,
referee_id INT,
home_team_id INT,
away_team_id INT,
home_coach_id INT,
away_coach_id INT,
home_score SMALLINT,
away_score SMALLINT,
FOREIGN KEY (world_cup_id) REFERENCES WORLD_CUP(id_world_cup) ON DELETE CASCADE,
FOREIGN KEY (stadium_id) REFERENCES STADIUM(id_stadium) ON DELETE CASCADE,
FOREIGN KEY (referee_id) REFERENCES REFEREE(id_referee) ON DELETE CASCADE,
FOREIGN KEY (home_team_id) REFERENCES TEAM(id_team) ON DELETE CASCADE,
FOREIGN KEY (away_team_id) REFERENCES TEAM(id_team) ON DELETE CASCADE,
FOREIGN KEY (home_coach_id) REFERENCES COACH(id_coach) ON DELETE CASCADE,
FOREIGN KEY (away_coach_id) REFERENCES COACH(id_coach) ON DELETE CASCADE
);

CREATE TABLE GOAL (
id_goal INT NOT NULL PRIMARY KEY,
game_id INT,
player_id INT,
minuto VARCHAR(10),
FOREIGN KEY (game_id) REFERENCES GAME(id_game) ON DELETE CASCADE,
FOREIGN KEY (player_id) REFERENCES PLAYER(id_player) ON DELETE CASCADE
);

CREATE TABLE OWN_GOAL (
id_own_goal INT NOT NULL PRIMARY KEY,
game_id INT,
player_id INT,
minuto VARCHAR(10),
FOREIGN KEY (game_id) REFERENCES GAME(id_game) ON DELETE CASCADE,
FOREIGN KEY (player_id) REFERENCES PLAYER(id_player) ON DELETE CASCADE
);

CREATE TABLE EXTRA_TIME (
id_extra_time INT NOT NULL PRIMARY KEY,
game_id INT,
home_score SMALLINT,
away_score SMALLINT,
FOREIGN KEY (game_id) REFERENCES GAME (id_game) ON DELETE CASCADE
);

CREATE TABLE PENALTY (
id_penalty INT NOT NULL PRIMARY KEY,
game_id INT,
home_score SMALLINT,
away_score SMALLINT,
FOREIGN KEY (game_id) REFERENCES GAME (id_game) ON DELETE CASCADE
);


SELECT * FROM COUNTRY;
SELECT * FROM TEAM;
SELECT * FROM PLAYER;
SELECT * FROM WORLD_CUP;
SELECT * FROM GOLDEN_BALL;
SELECT * FROM SILVER_BALL;
SELECT * FROM BRONZE_BALL;
SELECT * FROM GOLDEN_BOOT;
SELECT * FROM SILVER_SHOE;
SELECT * FROM BRONZE_SHOE;
SELECT * FROM GOLDEN_GLOVE;
SELECT * FROM BEST_YOUNG_PLAYER;
SELECT * FROM FAIR_PLAY;
SELECT * FROM CITY;
SELECT * FROM STADIUM;
SELECT * FROM COACH;
SELECT * FROM REFEREE;
SELECT * FROM GAME;
SELECT * FROM GOAL;
SELECT * FROM OWN_GOAL;
SELECT * FROM EXTRA_TIME;
SELECT * FROM PENALTY;




-- 6 - Trazer cinco consultas com join.

-- a - As Copas do Mundo com os 4 primeiros colocados. (join world cup, team)
SELECT CONCAT(YEAR, ' FIFA World Cup ', C.NAME) AS `World Cup`, T1.NAME AS `Champion`, T2.NAME  AS `2nd Place`, T3.NAME  AS `3rd Place`, T4.NAME  AS `4th Place`
FROM WORLD_CUP WC
INNER JOIN COUNTRY C ON C.ID_HOST = WC.HOST_ID
INNER JOIN TEAM T1 ON T1.ID_TEAM = WC.champion
INNER JOIN TEAM T2 ON T2.ID_TEAM = WC.RUNNER_UP
INNER JOIN TEAM T3 ON T3.ID_TEAM = WC.THIRD_PLACE
INNER JOIN TEAM T4 ON T4.ID_TEAM = WC.FOURTH_PLACE
ORDER BY YEAR DESC;



-- b - Os Jogadores que marcaram os gols das finais (join goal, player, team)
SELECT P.NAME AS PLAYER, T.NAME AS TEAM, COUNT(*) AS `GOALS IN FINALS` FROM PLAYER P
INNER JOIN TEAM T ON P.TEAM_ID = T.ID_TEAM
INNER JOIN GOAL G ON G.PLAYER_ID = P.ID_PLAYER
INNER JOIN GAME GM ON GM.ID_GAME = G.GAME_ID AND `DESCRIPTION` LIKE 'Final%'
GROUP BY ID_PLAYER
ORDER BY `GOALS IN FINALS` DESC;



-- c - Os Times que venceram o PrÃªmio de FIFA Fair Play. (join fair play, world cup, team, country)
SELECT CONCAT(YEAR, ' FIFA World Cup ', C.NAME) AS `World Cup`, GROUP_CONCAT(T.NAME SEPARATOR ' / ') AS `Fair Play Winner` FROM WORLD_CUP WC
INNER JOIN FAIR_PLAY FP ON FP.WORLD_CUP_ID = WC.ID_WORLD_CUP
LEFT JOIN TEAM T ON T.ID_TEAM = FP.TEAM_ID
INNER JOIN COUNTRY C ON C.ID_HOST = WC.HOST_ID
GROUP BY WC.ID_WORLD_CUP
ORDER BY YEAR DESC;



-- d - Os placares das finais.
-- d1
SELECT CONCAT(YEAR, ' FIFA World Cup ', C.NAME) AS Final,
CONCAT(T1.NAME, ' ', G.HOME_SCORE, ' x ', G.AWAY_SCORE, ' ', T2.NAME) AS `Regular Time`,
CONCAT(T1.NAME, ' ', ET.HOME_SCORE, ' x ', ET.AWAY_SCORE, ' ', T2.NAME) AS `Extra Time`,
CONCAT(T1.NAME, ' ', PK.HOME_SCORE, ' x ', PK.AWAY_SCORE, ' ', T2.NAME) AS `Penalties`
FROM GAME G
INNER JOIN WORLD_CUP WC ON WC.ID_WORLD_CUP = G.WORLD_CUP_ID
INNER JOIN COUNTRY C ON C.ID_HOST = WC.HOST_ID
INNER JOIN TEAM T1 ON T1.ID_TEAM = G.HOME_TEAM_ID
INNER JOIN TEAM T2 ON T2.ID_TEAM = G.AWAY_TEAM_ID
LEFT JOIN EXTRA_TIME ET ON ET.GAME_ID = G.ID_GAME
LEFT JOIN PENALTY PK ON PK.GAME_ID = G.ID_GAME
WHERE `DESCRIPTION` LIKE 'Final%'
ORDER BY YEAR DESC;

-- d2
SELECT CONCAT(YEAR, ' FIFA World Cup ') AS Game,
IF(IFNULL(PK.HOME_SCORE, IFNULL(G.HOME_SCORE + ET.HOME_SCORE, G.HOME_SCORE)) > IFNULL(PK.AWAY_SCORE, IFNULL(G.AWAY_SCORE + ET.AWAY_SCORE, G.AWAY_SCORE)), T1.NAME, T2.NAME) AS Champion,
CONCAT(T1.NAME, ' ', IFNULL(PK.HOME_SCORE, IFNULL(G.HOME_SCORE + ET.HOME_SCORE, G.HOME_SCORE)), ' x ', IFNULL(PK.AWAY_SCORE, IFNULL(G.AWAY_SCORE + ET.AWAY_SCORE, G.AWAY_SCORE)), ' ', T2.NAME) AS `Final Result`,
CONCAT(T1.NAME, ' ', G.HOME_SCORE, ' x ', G.AWAY_SCORE, ' ', T2.NAME) AS `At Regular Time`,
CONCAT(T1.NAME, ' ', ET.HOME_SCORE, ' x ', ET.AWAY_SCORE, ' ', T2.NAME) AS `At Extra Time`,
CONCAT(T1.NAME, ' ', PK.HOME_SCORE, ' x ', PK.AWAY_SCORE, ' ', T2.NAME) AS `Penalties`
FROM GAME G
INNER JOIN WORLD_CUP WC ON WC.ID_WORLD_CUP = G.WORLD_CUP_ID
INNER JOIN TEAM T1 ON T1.ID_TEAM = G.HOME_TEAM_ID
INNER JOIN TEAM T2 ON T2.ID_TEAM = G.AWAY_TEAM_ID
LEFT JOIN EXTRA_TIME ET ON ET.GAME_ID = G.ID_GAME
LEFT JOIN PENALTY PK ON PK.GAME_ID = G.ID_GAME
WHERE `DESCRIPTION` LIKE 'Final%'
ORDER BY YEAR DESC;



-- e - Os Jogadores que ganharam a Golden Ball, Silver Ball e Bronze Ball
SELECT CONCAT(YEAR, ' FIFA World Cup ', C.NAME) AS `World Cup`,
PGBL.NAME AS `Golden Ball`,
PSB.NAME AS `Silver Ball`,
PBB.NAME AS `Bronze Ball`
FROM WORLD_CUP WC
INNER JOIN COUNTRY C ON C.ID_HOST = WC.HOST_ID
LEFT JOIN GOLDEN_BALL GBL ON GBL.WORLD_CUP_ID = WC.ID_WORLD_CUP
LEFT JOIN SILVER_BALL SB ON SB.WORLD_CUP_ID = WC.ID_WORLD_CUP
LEFT JOIN BRONZE_BALL BB ON BB.WORLD_CUP_ID = WC.ID_WORLD_CUP
LEFT JOIN PLAYER PGBL ON PGBL.ID_PLAYER = GBL.PLAYER_ID
LEFT JOIN PLAYER PSB ON PSB.ID_PLAYER = SB.PLAYER_ID
LEFT JOIN PLAYER PBB ON PBB.ID_PLAYER = BB.PLAYER_ID
WHERE YEAR < YEAR(CURDATE())
ORDER BY YEAR DESC;




-- 7 - Trazer cinco consultas com order by.

-- a - Os Jogadores com mais gols desse db
SELECT `Name`, Games, Goals FROM PLAYER
WHERE GOALS > 0
ORDER BY GOALS DESC
LIMIT 30;



-- b - Os Times que mais participaram de copas
SELECT `NAME`, PARTICIPATIONS FROM TEAM
ORDER BY PARTICIPATIONS DESC
LIMIT 30;



-- c - Os jogadores que receberam cartÃµes amarelos
SELECT `NAME`, YELLOW_CARDS FROM PLAYER
WHERE YELLOW_CARDS > 0
ORDER BY YELLOW_CARDS DESC;



-- d - Os Jogadores com mais participaÃ§Ãµes em copas
SELECT `NAME`, PARTICIPATIONS FROM PLAYER
ORDER BY PARTICIPATIONS DESC
LIMIT 10;



-- e - Os Jogadores com mais jogos
SELECT `NAME`, GAMES FROM PLAYER
ORDER BY GAMES DESC
LIMIT 30;




-- 8 - Trazer cinco consultas com group by.

-- a NÃºmero de tÃ­tulos dos treinadores por nacionalidade
SELECT NATIONALITY AS Country, SUM(TITLES) AS `Number of Titles` FROM COACH
GROUP BY NATIONALITY HAVING `Number of Titles` > 0
ORDER BY `Number of Titles` DESC;

/* Esse quebrou quando tirei as colunas da tabela team, vou tentar arrumar outro dia.
-- a - NÃºmero de tÃ­tulos da Copa por ConferÃªncia 
SELECT Confederation, SUM(TITLES) AS `Number of Titles` FROM TEAM 
GROUP BY CONFEDERATION
ORDER BY `Number of Titles` DESC;
*/



-- b - Quantos times diferentes participaram (group by confederation)
SELECT Confederation, COUNT(*) AS `TIMES DIFERENTES QUE PARTICIPARAM` FROM TEAM
GROUP BY CONFEDERATION
ORDER BY `TIMES DIFERENTES QUE PARTICIPARAM` DESC;



-- c - Nacionalidades dos juÃ­zes que mais apitaram jogos (group by nationality)
SELECT NATIONALITY, COUNT(*) `VEZES QUE APITOU` FROM GAME G
INNER JOIN REFEREE R ON R.id_referee = G.referee_id
GROUP BY NATIONALITY
ORDER BY `VEZES QUE APITOU` DESC; -- mudar para finais?



-- d - Nacionalidades mais presentes dos tÃ©cnicos em copas (group by nationality)
SELECT NATIONALITY AS Country, COUNT(NATIONALITY) AS `Number of Coaches` FROM COACH
GROUP BY NATIONALITY
ORDER BY `Number of Coaches` DESC;



-- e - Cidades com mais jogos sediados nas copas
SELECT C.NAME AS City, COUNT(*) `Number of Games` FROM GAME G
INNER JOIN STADIUM S ON S.ID_STADIUM = G.STADIUM_ID
INNER JOIN CITY C ON C.ID_CITY = S.CITY_ID
GROUP BY C.NAME
ORDER BY `Number of Games` DESC;




-- 9 - Trazer trÃªs consultas que combinem join e order by (sem repetir as anteriores).

-- a - Os Jogos com mais pÃºblico
SELECT ATTENDANCE, S.NAME AS `STADIUM`, CONCAT(`YEAR`, '   ', C.NAME) AS `WORLD CUP`, CONCAT(DESCRIPTION, '  -  ', TH.NAME, ' x ', TA.NAME) AS `MATCH` FROM GAME G
INNER JOIN WORLD_CUP WC ON WC.ID_WORLD_CUP = G.WORLD_CUP_ID
INNER JOIN TEAM TH ON TH.id_Team = G.HOME_TEAM_ID
INNER JOIN TEAM TA ON TA.id_Team = G.AWAY_TEAM_ID
INNER JOIN STADIUM S ON S.id_stadium = G.stadium_id
INNER JOIN COUNTRY C ON C.id_host = WC.host_id
ORDER BY ATTENDANCE DESC LIMIT 30;



-- b - Os Jogadores que Venceram o Golden Boot (join world cup, country e order by goals)
SELECT CONCAT(`YEAR`, '   ', C.NAME) AS `WORLD CUP`, P.NAME AS `GOLDEN BOOT WINNER`, GB.GAMES, GB.GOALS
FROM PLAYER P
INNER JOIN GOLDEN_BOOT GB
ON GB.PLAYER_ID = P.ID_PLAYER
INNER JOIN WORLD_CUP WC
ON WC.ID_WORLD_CUP = GB.WORLD_CUP_ID
INNER JOIN COUNTRY C
ON C.ID_HOST = WC.HOST_ID
ORDER BY GOALS DESC;



-- c - Os estÃ¡dios que o Brasil jogou no Penta, ordenados por capacidade
SELECT S.NAME, CAPACITY, C.NAME AS CITY
FROM STADIUM S
INNER JOIN CITY C ON C.ID_CITY = S.CITY_ID
INNER JOIN GAME G ON G.STADIUM_ID = S.ID_STADIUM AND
G.WORLD_CUP_ID = 16 AND (G.HOME_TEAM_ID = 4 OR G.AWAY_TEAM_ID = 4)
ORDER BY CAPACITY DESC;

SELECT S.NAME, CAPACITY, C.NAME AS CITY FROM STADIUM S
INNER JOIN CITY C ON C.ID_CITY = S.CITY_ID
INNER JOIN GAME G ON G.STADIUM_ID = S.ID_STADIUM AND
(G.HOME_TEAM_ID = 4 OR G.AWAY_TEAM_ID = 4)
INNER JOIN WORLD_CUP WC ON WC.ID_WORLD_CUP = G.WORLD_CUP_ID AND WC.YEAR = 2002
ORDER BY CAPACITY DESC;




-- 10 - Trazer sete consultas que contemplem funÃ§Ãµes matemÃ¡ticas (e.g. AVG, SUM...)

-- a - Soma dos Gols das SeleÃ§Ãµes por ConferÃªncia
SELECT CONFEDERATION, SUM(GOALS_SCORED) AS `GOLS MARCADOS`,
SUM(GOALS_AGAINST) AS `GOLS SOFRIDOS`,
SUM(GOALS_SCORED) - SUM(GOALS_AGAINST) AS SALDO FROM TEAM
GROUP BY CONFEDERATION
ORDER BY CONFEDERATION ASC;



-- b - Maiores NÃºmeros de seleÃ§Ãµes
SELECT
(SELECT CONCAT(MAX(PARTICIPATIONS), ' - ' , GROUP_CONCAT(DISTINCT NAME SEPARATOR ' / ')) FROM TEAM WHERE PARTICIPATIONS = (SELECT MAX(PARTICIPATIONS) FROM TEAM) ORDER BY NAME) AS `MAIS PARTICIPAÃÃES`,
(SELECT CONCAT(MAX(GAMES), ' - ' , GROUP_CONCAT(DISTINCT NAME SEPARATOR ' / ')) FROM TEAM WHERE GAMES = (SELECT MAX(GAMES) FROM TEAM) ORDER BY NAME) AS `MAIS JOGOS`,
(SELECT CONCAT(MAX(WINS), ' - ' , GROUP_CONCAT(DISTINCT NAME SEPARATOR ' / ')) FROM TEAM WHERE WINS = (SELECT MAX(WINS) FROM TEAM) ORDER BY NAME) AS `MAIS VITÃRIAS`,
(SELECT CONCAT(MAX(DRAWS), ' - ' , GROUP_CONCAT(DISTINCT NAME SEPARATOR ' / ')) FROM TEAM WHERE DRAWS = (SELECT MAX(DRAWS) FROM TEAM) ORDER BY NAME) AS `MAIS EMPATES`,
(SELECT CONCAT(MAX(LOSSES), ' - ' , GROUP_CONCAT(DISTINCT NAME SEPARATOR ' / ')) FROM TEAM WHERE LOSSES = (SELECT MAX(LOSSES) FROM TEAM) ORDER BY NAME) AS `MAIS DERROTAS`,
(SELECT CONCAT(MAX(GOALS_SCORED), ' - ' , GROUP_CONCAT(DISTINCT NAME SEPARATOR ' / ')) FROM TEAM WHERE GOALS_SCORED = (SELECT MAX(GOALS_SCORED) FROM TEAM) ORDER BY NAME) AS `MAIS GOLS MARCADOS`,
(SELECT CONCAT(MAX(GOALS_AGAINST), ' - ' , GROUP_CONCAT(DISTINCT NAME SEPARATOR ' / ')) FROM TEAM WHERE GOALS_AGAINST = (SELECT MAX(GOALS_AGAINST) FROM TEAM) ORDER BY NAME) AS `MAIS GOLS SOFRIDOS`;

/* --Esse aqui quebrou depois que tirei as colunas da tabela, outro dia vou tentar arrumar
SELECT
(SELECT CONCAT(MAX(PARTICIPATIONS), ' - ' , GROUP_CONCAT(DISTINCT NAME SEPARATOR ' / ')) FROM TEAM WHERE PARTICIPATIONS = (SELECT MAX(PARTICIPATIONS) FROM TEAM) ORDER BY NAME) AS `MAIS PARTICIPAÃÃES`,
(SELECT CONCAT(MAX(TITLES), ' - ' , GROUP_CONCAT(DISTINCT NAME SEPARATOR ' / ')) FROM TEAM WHERE TITLES = (SELECT MAX(TITLES) FROM TEAM) ORDER BY NAME) AS `MAIS TITULOS`,
(SELECT CONCAT(MAX(SECOND_PLACES), ' - ' , GROUP_CONCAT(DISTINCT NAME SEPARATOR ' / ')) FROM TEAM WHERE SECOND_PLACES = (SELECT MAX(SECOND_PLACES) FROM TEAM) ORDER BY NAME) AS `MAIS 2Âºs LUGARES`,
(SELECT CONCAT(MAX(THIRD_PLACES), ' - ' , GROUP_CONCAT(DISTINCT NAME SEPARATOR ' / ')) FROM TEAM WHERE THIRD_PLACES = (SELECT MAX(THIRD_PLACES) FROM TEAM) ORDER BY NAME) AS `MAIS 3Âºs LUGARES`,
(SELECT CONCAT(MAX(FOURTH_PLACES), ' - ' , GROUP_CONCAT(DISTINCT NAME SEPARATOR ' / ')) FROM TEAM WHERE FOURTH_PLACES = (SELECT MAX(FOURTH_PLACES) FROM TEAM) ORDER BY NAME) AS `MAIS 4Âºs LUGARES`,
(SELECT CONCAT(MAX(GAMES), ' - ' , GROUP_CONCAT(DISTINCT NAME SEPARATOR ' / ')) FROM TEAM WHERE GAMES = (SELECT MAX(GAMES) FROM TEAM) ORDER BY NAME) AS `MAIS JOGOS`,
(SELECT CONCAT(MAX(WINS), ' - ' , GROUP_CONCAT(DISTINCT NAME SEPARATOR ' / ')) FROM TEAM WHERE WINS = (SELECT MAX(WINS) FROM TEAM) ORDER BY NAME) AS `MAIS VITÃRIAS`,
(SELECT CONCAT(MAX(DRAWS), ' - ' , GROUP_CONCAT(DISTINCT NAME SEPARATOR ' / ')) FROM TEAM WHERE DRAWS = (SELECT MAX(DRAWS) FROM TEAM) ORDER BY NAME) AS `MAIS EMPATES`,
(SELECT CONCAT(MAX(LOSSES), ' - ' , GROUP_CONCAT(DISTINCT NAME SEPARATOR ' / ')) FROM TEAM WHERE LOSSES = (SELECT MAX(LOSSES) FROM TEAM) ORDER BY NAME) AS `MAIS DERROTAS`,
(SELECT CONCAT(MAX(GOALS_SCORED), ' - ' , GROUP_CONCAT(DISTINCT NAME SEPARATOR ' / ')) FROM TEAM WHERE GOALS_SCORED = (SELECT MAX(GOALS_SCORED) FROM TEAM) ORDER BY NAME) AS `MAIS GOLS MARCADOS`,
(SELECT CONCAT(MAX(GOALS_AGAINST), ' - ' , GROUP_CONCAT(DISTINCT NAME SEPARATOR ' / ')) FROM TEAM WHERE GOALS_AGAINST = (SELECT MAX(GOALS_AGAINST) FROM TEAM) ORDER BY NAME) AS `MAIS GOLS SOFRIDOS`;
*/



-- c - MÃ©dia de pÃºblico das finais.
SELECT FLOOR(AVG(ATTENDANCE)) AS `MÃ©dia de PÃºblico das Finais` FROM GAME
WHERE `DESCRIPTION` LIKE 'Final%';



-- d - Menor pÃºblico.
SELECT MIN(ATTENDANCE) FROM GAME;



-- e - Mostrar Copas do Mundo Ãmpares
SELECT EDITION, YEAR, C.NAME AS `HOST` FROM WORLD_CUP
INNER JOIN COUNTRY C ON C.ID_HOST = WORLD_CUP.HOST_ID
WHERE MOD(CAST(EDITION AS UNSIGNED), 2) != 0
ORDER BY YEAR ASC;



-- f - Mostrar seleÃ§Ãµes e seus percentuais de vitorias, empates e derrotas
SELECT NAME AS TEAM, GAMES, WINS, DRAWS, LOSSES,
CONCAT(ROUND((WINS / GAMES * 100), 2), ' %') AS `PERCENTUAL DE VITORIAS`,
CONCAT(ROUND((DRAWS / GAMES * 100), 2), ' %') AS `PERCENTUAL DE EMPATES`,
CONCAT(ROUND((LOSSES / GAMES * 100), 2), ' %') AS `PERCENTUAL DE DERROTAS`
FROM TEAM
ORDER BY `PERCENTUAL DE VITORIAS` DESC, `PERCENTUAL DE EMPATES` DESC;



-- g - Mostrar seleÃ§Ãµes e suas mÃ©dias de gols por jogo
SELECT NAME AS TEAM, GAMES, GOALS_SCORED,
TRUNCATE(GOALS_SCORED / GAMES, 2) AS `MÃDIA DE GOLS MARCADOS` FROM TEAM
ORDER BY `MÃDIA DE GOLS MARCADOS` DESC;




-- 11 - Criar cinco visÃµes.

-- a - Campanha de Brasil e Alemanha na Copa do Mundo de 2002
CREATE VIEW `2002_WC_FINALISTS_CAMPAIGNS_VIEW` AS
SELECT DESCRIPTION AS STAGE, DATA, S.NAME AS Stadium, CONCAT(TH.NAME, ' ', HOME_SCORE, ' x ', AWAY_SCORE, ' ', TA.NAME) AS `Match Result` FROM GAME G
INNER JOIN WORLD_CUP WC ON WC.ID_WORLD_CUP = G.WORLD_CUP_ID AND YEAR = 2002
INNER JOIN COUNTRY C ON C.ID_HOST = WC.HOST_ID
INNER JOIN STADIUM S ON S.ID_STADIUM = G.STADIUM_ID
INNER JOIN TEAM TH ON TH.ID_TEAM = G.HOME_TEAM_ID
INNER JOIN TEAM TA ON TA.ID_TEAM = G.AWAY_TEAM_ID
WHERE G.HOME_TEAM_ID = 4 OR G.AWAY_TEAM_ID = 4 OR G.HOME_TEAM_ID = 8 OR G.AWAY_TEAM_ID = 8
ORDER BY DATA ASC;

SELECT * FROM `2002_WC_FINALISTS_CAMPAIGNS_VIEW`;



-- b - Todos os Gols do Ronaldo na Copa do Mundo de 2002.
-- b1 -- fiz no cÃ³digo de baixo
SELECT `DESCRIPTION`, MINUTO, T.NAME AS `OPPONENT` FROM GOAL
INNER JOIN GAME G ON G.ID_GAME = GOAL.GAME_ID
INNER JOIN PLAYER P ON P.ID_PLAYER = GOAL.PLAYER_ID
INNER JOIN TEAM T ON (T.ID_TEAM = G.HOME_TEAM_ID AND G.HOME_TEAM_ID != P.TEAM_ID) OR (T.ID_TEAM = G.AWAY_TEAM_ID AND G.AWAY_TEAM_ID != P.TEAM_ID)
WHERE GOAL.PLAYER_ID = 0 AND G.WORLD_CUP_ID = 16
ORDER BY G.DATA, MINUTO ASC;

-- b2
CREATE VIEW `2002_WC_R9_GOALS_2_VIEW` AS
SELECT `DESCRIPTION`, GROUP_CONCAT(MINUTO SEPARATOR ', ') AS `MINUTOS DOS GOLS`, T.NAME AS `OPPONENT`, CONCAT(TH.NAME, ' ', G.HOME_SCORE, ' x ', G.AWAY_SCORE, ' ', TA.NAME) AS `FINAL SCORE` FROM GOAL
INNER JOIN GAME G ON G.ID_GAME = GOAL.GAME_ID
INNER JOIN PLAYER P ON P.ID_PLAYER = GOAL.PLAYER_ID
INNER JOIN TEAM T ON (T.ID_TEAM = G.HOME_TEAM_ID AND G.HOME_TEAM_ID != P.TEAM_ID) OR (T.ID_TEAM = G.AWAY_TEAM_ID AND G.AWAY_TEAM_ID != P.TEAM_ID)
INNER JOIN TEAM TH ON TH.ID_TEAM = G.HOME_TEAM_ID
INNER JOIN TEAM TA ON TA.ID_TEAM = G.AWAY_TEAM_ID
WHERE GOAL.PLAYER_ID = 0 AND G.WORLD_CUP_ID = 16
GROUP BY G.ID_GAME
ORDER BY G.DATA ASC;

SELECT * FROM `2002_WC_R9_GOALS_2_VIEW`;



-- c - OS VENCEDORES DO GOLDEN BOOT, SILVER SHOE E BRONZE SHOE
CREATE VIEW BOOT_WINNERS AS
SELECT CONCAT(YEAR, ' World Cup ', C.NAME) AS `WORLD CUP`,
GROUP_CONCAT(DISTINCT PGB.NAME SEPARATOR ' / ') AS `GOLDEN BOOT`,
GROUP_CONCAT(DISTINCT PSS.NAME SEPARATOR ' / ') AS `SILVER SHOE`,
GROUP_CONCAT(DISTINCT PBS.NAME SEPARATOR ' / ') AS `BRONZE SHOE`
FROM WORLD_CUP WC
INNER JOIN COUNTRY C ON C.ID_HOST = WC.HOST_ID
left JOIN GOLDEN_BOOT GB ON GB.WORLD_CUP_ID = WC.ID_WORLD_CUP
LEFT JOIN SILVER_SHOE SS ON SS.WORLD_CUP_ID = WC.ID_WORLD_CUP
LEFT JOIN BRONZE_SHOE BS ON BS.WORLD_CUP_ID = WC.ID_WORLD_CUP
left JOIN PLAYER PGB ON PGB.ID_PLAYER = GB.PLAYER_ID
LEFT JOIN PLAYER PSS ON PSS.ID_PLAYER = SS.PLAYER_ID
LEFT JOIN PLAYER PBS ON PBS.ID_PLAYER = BS.PLAYER_ID
WHERE YEAR < YEAR(CURDATE())
GROUP BY YEAR
ORDER BY YEAR DESC;

SELECT * FROM BOOT_WINNERS;



-- d - Os artilheiros da Copa de 2002
CREATE VIEW `2002_WC_TOP_GOALSCORERS_VIEW` AS
SELECT P.NAME AS `PLAYER`, T.NAME AS `TEAM`, COUNT(*) AS GOALS FROM GOAL G
INNER JOIN GAME GM ON G.GAME_ID = GM.ID_GAME
INNER JOIN WORLD_CUP WC ON GM.WORLD_CUP_ID = WC.ID_WORLD_CUP
INNER JOIN PLAYER P ON G.PLAYER_ID = P.ID_PLAYER
INNER JOIN TEAM T ON P.TEAM_ID = T.ID_TEAM
WHERE WC.YEAR = 2002
GROUP BY P.ID_PLAYER
ORDER BY GOALS DESC;

SELECT * FROM `2002_WC_TOP_GOALSCORERS_VIEW`;



-- e - Todas as goleadas
CREATE VIEW `EVERY_GOLEADA_VIEW` AS
SELECT CONCAT(YEAR, ' FIFA World Cup ', C.NAME) AS `World Cup`, DESCRIPTION AS STAGE, DATA, CONCAT(TH.NAME, ' ', HOME_SCORE, ' x ', AWAY_SCORE, ' ', TA.NAME) AS RESULT FROM GAME G
INNER JOIN WORLD_CUP WC ON WC.ID_WORLD_CUP = G.WORLD_CUP_ID
INNER JOIN COUNTRY C ON C.ID_HOST = WC.HOST_ID
INNER JOIN TEAM TH ON TH.ID_TEAM = G.HOME_TEAM_ID
INNER JOIN TEAM TA ON TA.ID_TEAM = G.AWAY_TEAM_ID
WHERE ABS(HOME_SCORE - AWAY_SCORE) > 2
ORDER BY DATA;

SELECT * FROM `EVERY_GOLEADA_VIEW`; -- nÃ£o sei como escreve goleada em inglÃªs :~)




-- 12 - CRIAR 5 SAVEPOINTS:

-- 1 - Atualizando os stats dos jogadores que estÃ£o no db atÃ© a segunda rodada da fase de grupos da copa de 2022
START TRANSACTION;
SAVEPOINT SP_SEM_ATUALIZAR_PLAYERS;
UPDATE PLAYER -- Lionel Messi
SET PARTICIPATIONS = 5, TITLES = 0, GAMES = 21, WINS = 13, LOSSES = 5, GOALS = 8 WHERE ID_PLAYER = 36;

UPDATE PLAYER -- Luka Modric
SET PARTICIPATIONS = 4, GAMES = 14, WINS = 6, DRAWS = 5, YELLOW_CARDS = 1 WHERE ID_PLAYER = 37;

UPDATE PLAYER -- Thomas Muller
SET PARTICIPATIONS = 4, GAMES = 18, DRAWS = 2, LOSSES = 4 WHERE ID_PLAYER = 44;

UPDATE PLAYER -- Eden Hazard
SET PARTICIPATIONS = 3, GAMES = 13, WINS = 10, LOSSES = 3 WHERE ID_PLAYER = 45;

UPDATE PLAYER -- Harry Kane
SET PARTICIPATIONS = 2, GAMES = 8, WINS = 4, DRAWS = 2 WHERE ID_PLAYER = 72;

UPDATE PLAYER -- Neymar
SET PARTICIPATIONS = 3, GAMES = 11, WINS = 7 WHERE ID_PLAYER = 104;

UPDATE PLAYER -- Romelu Lukaku
SET PARTICIPATIONS = 3, GAMES = 11, LOSSES = 3 WHERE ID_PLAYER = 105;

UPDATE PLAYER -- Manuel Neuer
SET PARTICIPATIONS = 4, GAMES = 18, DRAWS = 2, LOSSES = 5 WHERE ID_PLAYER = 148;

UPDATE PLAYER -- Thibaut Courtouis
SET PARTICIPATIONS = 3, GAMES = 14, WINS = 11, LOSSES = 3 WHERE ID_PLAYER = 149;


SELECT * FROM PLAYER  -- pra ficar mais fÃ¡cil de visualizar
WHERE ID_PLAYER = 36 OR ID_PLAYER = 37 OR ID_PLAYER = 44 OR ID_PLAYER = 45 OR ID_PLAYER = 72 OR ID_PLAYER = 104 OR ID_PLAYER = 105 OR ID_PLAYER = 148 OR ID_PLAYER = 149;

ROLLBACK TO SP_SEM_ATUALIZAR_PLAYERS;



-- 2 - Atualizando os stats dos tÃ©cnicos que estÃ£o no db atÃ© a segunda rodada da fase de grupos da copa de 2022
START TRANSACTION;
SAVEPOINT SP2_SEM_ATUALIZAR_TECNICOS;
UPDATE COACH -- Didier Deschamps
SET PARTICIPATIONS = 3, GAMES = 14, WINS = 11, GOALS_SCORED = 30, GOALS_AGAINST = 11 WHERE ID_COACH = 8;

UPDATE COACH -- Zlatko Dalic
SET PARTICIPATIONS = 2, GAMES = 9, WINS = 5, DRAWS = 3, GOALS_SCORED = 18, GOALS_AGAINST = 10 WHERE ID_COACH = 9;


SELECT * FROM COACH WHERE ID_COACH = 8 OR ID_COACH = 9;
ROLLBACK TO SP2_SEM_ATUALIZAR_TECNICOS;



-- 3 - Inserindo as seleÃ§Ãµes do Catar e PaÃ­s de Gales que nÃ£o estavam no db e jÃ¡ encerraram a participaÃ§Ã£o na copa
START TRANSACTION;
SAVEPOINT SP3_SEM_INSERT_SELECOES;
INSERT INTO TEAM VALUES
(58, 'Catar', 'AFC', 1, 0, 0, 0, 0, 3, 0, 0, 3, 1, 7),
(59, 'Wales', 'UEFA', 2, 0, 0, 0, 0, 8, 1, 4, 3, 5, 10);


SELECT * FROM TEAM;
ROLLBACK TO SP3_SEM_INSERT_SELECOES;


-- 4 e 5 - Inserindo as cidades que receberÃ£o jogos no Catar e os EstÃ¡dios
START TRANSACTION;
SAVEPOINT SP4_ANTES_INSERT_CITIES_CATAR;
INSERT INTO CITY VALUES -- 4 - Inserindo as cidades que receberÃ£o jogos na Copa do Catar
(67, 'Lusail', 16),
(68, 'Al Khor', 16),
(69, 'Doha', 16),
(70, 'Al Rayyan', 16),
(71, 'Al Wakrah', 16);

SAVEPOINT SP5_ANTES_INSERT_STADIUMS_CATAR;
INSERT INTO STADIUM VALUES -- 5 - Inserindo os estÃ¡dios da Copa de 2022
(69, 'Lusail Iconic Stadium', 88966, 67),
(70, 'Al Bayt Stadium', 68895, 68),
(71, 'Al Thumama Stadium', 44400, 69),
(72, 'Stadium 974', 44089, 69),
(73, 'Khalifa International Stadium', 45857, 70),
(74, 'Ahmad bin Ali Stadium', 45032, 70),
(75, 'Education City Stadium', 44667, 70),
(76, 'Al Janoub Stadium', 44325, 71);

SELECT * FROM CITY;
ROLLBACK TO SP4_ANTES_INSERT_CITIES_CATAR;

SELECT * FROM STADIUM;
ROLLBACK TO SP5_ANTES_INSERT_STADIUMS_CATAR;




-- 13 - Criar trÃªs usuÃ¡rios distintos sendo que um deles sÃ³ poderÃ¡ ter acesso Ã s views,
-- um sÃ³ poderÃ¡ inserir dados sem ver e o outro apenas poderÃ¡ ver sem nenhuma outra aÃ§Ã£o.

-- UsuÃ¡rio apenas com acesso Ã s views
CREATE USER 'usuario1'@'localhost' IDENTIFIED BY '1704';
GRANT SELECT ON WORLD_CUPS.`2002_WC_FINALISTS_CAMPAIGNS_VIEW` TO 'usuario1'@'localhost';
GRANT SELECT ON WORLD_CUPS.`2002_WC_R9_GOALS_2_VIEW` TO 'usuario1'@'localhost';
GRANT SELECT ON WORLD_CUPS.`2002_WC_TOP_GOALSCORERS_VIEW` TO 'usuario1'@'localhost';
GRANT SELECT ON WORLD_CUPS.BOOT_WINNERS TO 'usuario1'@'localhost';
GRANT SELECT ON WORLD_CUPS.EVERY_GOLEADA_VIEW TO 'usuario1'@'localhost';
GRANT SELECT ON WORLD_CUPS.GAME_VIEW TO 'usuario1'@'localhost';



-- UsuÃ¡rio que apenas pode inserir dados
CREATE USER 'usuario2'@'localhost' IDENTIFIED BY '1234';
GRANT INSERT ON WORLD_CUPS.* TO 'usuario2'@'localhost';



-- UsuÃ¡rio que somente pode visualizar
CREATE USER 'usuario3'@'localhost' IDENTIFIED BY '4321';
GRANT SELECT ON WORLD_CUPS.* TO 'usuario3'@'localhost';

FLUSH PRIVILEGES;


-- Para os testes do usuario 2
SELECT * FROM CITY;
SELECT * FROM STADIUM;
DELETE FROM CITY WHERE ID_CITY = 500;
DELETE FROM STADIUM WHERE ID_STADIUM = 500;





-- Criando mais algumas views:
CREATE VIEW VIEW_TABLE_GAME AS
SELECT ID_TEAM AS ID, NAME AS Team, Confederation, Participations, 
(SELECT COUNT(CHAMPION) FROM WORLD_CUP WC WHERE CHAMPION =  TEAM.ID_TEAM) AS `Titles`,
(SELECT COUNT(RUNNER_UP) FROM WORLD_CUP WC WHERE RUNNER_UP =  TEAM.ID_TEAM) AS `2nd Places`,
(SELECT COUNT(THIRD_PLACE) FROM WORLD_CUP WC WHERE THIRD_PLACE =  TEAM.ID_TEAM) AS `3rd Places`,
(SELECT COUNT(FOURTH_PLACE) FROM WORLD_CUP WC WHERE FOURTH_PLACE =  TEAM.ID_TEAM) AS `4th Places`,
Games, Wins, Draws, Losses, GOALS_SCORED AS `Goals Scored`, GOALS_AGAINST AS `Goals Against`,
(GOALS_SCORED - GOALS_AGAINST) AS `Saldo de Gols`
FROM TEAM;

SELECT * FROM VIEW_TABLE_GAME; -- Tirei do csv e fiz os totais somando o numero de titulos, 2Âº,3Âº e 4Âº lugares



CREATE VIEW VIEW_TABLE_STADIUM AS
SELECT S.ID_STADIUM AS ID, S.Name, Capacity, C.NAME AS City FROM STADIUM S
INNER JOIN CITY C ON C.ID_CITY = S.CITY_ID
ORDER BY ID_STADIUM;

SELECT * FROM VIEW_TABLE_STADIUM;



CREATE VIEW VIEW_TABLE_GOLDEN_GLOVE AS
SELECT GG.ID_GOLDEN_GLOVE AS ID, CONCAT(WC.YEAR, ' World Cup ', C.NAME) AS `World Cup`, P.NAME AS Winner FROM GOLDEN_GLOVE GG
LEFT JOIN WORLD_CUP WC ON WC.ID_WORLD_CUP = GG.WORLD_CUP_ID
INNER JOIN COUNTRY C ON C.ID_HOST = WC.HOST_ID
LEFT JOIN PLAYER P ON P.ID_PLAYER = GG.PLAYER_ID;

SELECT * FROM VIEW_TABLE_GOLDEN_GLOVE; -- Nessas premiaÃ§Ãµes deixei nulos para mostrar as ediÃ§Ãµes que nÃ£o houve premiaÃ§Ã£o



CREATE VIEW VIEW_TABLE_BEST_YOUNG_PLAYER AS
SELECT BYP.ID_BEST_YOUNG_PLAYER AS ID, CONCAT(WC.YEAR, ' World Cup ', C.NAME) AS `World Cup`, P.NAME  AS Winner FROM BEST_YOUNG_PLAYER BYP
LEFT JOIN WORLD_CUP WC ON WC.ID_WORLD_CUP = BYP.WORLD_CUP_ID
INNER JOIN COUNTRY C ON C.ID_HOST = WC.HOST_ID
LEFT JOIN PLAYER P ON P.ID_PLAYER = BYP.PLAYER_ID;

SELECT * FROM VIEW_TABLE_BEST_YOUNG_PLAYER;



CREATE VIEW VIEW_TABLE_GOAL AS
SELECT G.ID_GOAL AS ID, CONCAT(WC.YEAR, ' World Cup ', C.NAME) AS `World Cup`, GM.DESCRIPTION AS Round, CONCAT(T1.NAME, ' x ', T2.NAME) AS Game, CONCAT(P.NAME, ' (',T.NAME,')') AS Goalscorer, Minuto FROM GOAL G
INNER JOIN GAME GM ON GM.ID_GAME = G.GAME_ID 
INNER JOIN TEAM T1 ON T1.ID_TEAM = GM.HOME_TEAM_ID
INNER JOIN TEAM T2 ON T2.ID_TEAM = GM.AWAY_TEAM_ID
INNER JOIN WORLD_CUP WC ON WC.ID_WORLD_CUP = GM.WORLD_CUP_ID
INNER JOIN COUNTRY C ON C.ID_HOST = WC.HOST_ID
INNER JOIN PLAYER P ON P.ID_PLAYER = G.PLAYER_ID
INNER JOIN TEAM T ON T.ID_TEAM = P.TEAM_ID;

SELECT * FROM VIEW_TABLE_GOAL;



CREATE VIEW VIEW_TABLE_OWN_GOAL AS
SELECT OG.ID_OWN_GOAL AS ID, CONCAT(WC.YEAR, ' World Cup ', C.NAME) AS `World Cup`, GM.DESCRIPTION AS Round, CONCAT(T1.NAME, ' x ', T2.NAME) AS Game, CONCAT(P.NAME, ' (',T.NAME,')') AS Goalscorer, Minuto FROM OWN_GOAL OG
INNER JOIN GAME GM ON GM.ID_GAME = OG.GAME_ID 
INNER JOIN TEAM T1 ON T1.ID_TEAM = GM.HOME_TEAM_ID
INNER JOIN TEAM T2 ON T2.ID_TEAM = GM.AWAY_TEAM_ID
INNER JOIN WORLD_CUP WC ON WC.ID_WORLD_CUP = GM.WORLD_CUP_ID
INNER JOIN COUNTRY C ON C.ID_HOST = WC.HOST_ID
INNER JOIN PLAYER P ON P.ID_PLAYER = OG.PLAYER_ID
INNER JOIN TEAM T ON T.ID_TEAM = P.TEAM_ID;

SELECT * FROM  VIEW_TABLE_OWN_GOAL;



CREATE VIEW VIEW_TABLE_EXTRA_TIME AS
SELECT ET.ID_EXTRA_TIME AS ID, CONCAT(WC.YEAR, ' World Cup ', C.NAME) AS `World Cup`, GM.DESCRIPTION AS Round, CONCAT(T1.NAME, ' ', GM.HOME_SCORE, ' x ', GM.AWAY_SCORE, ' ', T2.NAME) AS `Score at Regular Time`, CONCAT(T1.NAME, ' ', ET.HOME_SCORE, ' x ', ET.AWAY_SCORE, ' ', T2.NAME) AS `Score at Extra Time` FROM EXTRA_TIME ET
INNER JOIN GAME GM ON GM.ID_GAME = ET.GAME_ID 
INNER JOIN TEAM T1 ON T1.ID_TEAM = GM.HOME_TEAM_ID
INNER JOIN TEAM T2 ON T2.ID_TEAM = GM.AWAY_TEAM_ID
INNER JOIN WORLD_CUP WC ON WC.ID_WORLD_CUP = GM.WORLD_CUP_ID
INNER JOIN COUNTRY C ON C.ID_HOST = WC.HOST_ID;

SELECT * FROM VIEW_TABLE_EXTRA_TIME;



CREATE VIEW VIEW_TABLE_PENALTY AS
SELECT PK.ID_PENALTY AS ID, CONCAT(WC.YEAR, ' World Cup ', C.NAME) AS `World Cup`, GM.DESCRIPTION AS Round, CONCAT(T1.NAME, ' ', GM.HOME_SCORE, ' x ', GM.AWAY_SCORE, ' ', T2.NAME) AS `Score at Regular Time`, CONCAT(T1.NAME, ' ', ET.HOME_SCORE, ' x ', ET.AWAY_SCORE, ' ', T2.NAME) AS `Score at Extra Time`, CONCAT(T1.NAME, ' ', PK.HOME_SCORE, ' x ', PK.AWAY_SCORE, ' ', T2.NAME) AS `Penalties` FROM PENALTY PK
INNER JOIN GAME GM ON GM.ID_GAME = PK.GAME_ID 
INNER JOIN EXTRA_TIME ET ON ET.GAME_ID = GM.ID_GAME
INNER JOIN TEAM T1 ON T1.ID_TEAM = GM.HOME_TEAM_ID
INNER JOIN TEAM T2 ON T2.ID_TEAM = GM.AWAY_TEAM_ID
INNER JOIN WORLD_CUP WC ON WC.ID_WORLD_CUP = GM.WORLD_CUP_ID
INNER JOIN COUNTRY C ON C.ID_HOST = WC.HOST_ID;

SELECT * FROM VIEW_TABLE_PENALTY;




-- Mais Algumas EstatÃ­sticas

-- Da tabela de treinadores
SELECT NAME, PARTICIPATIONS FROM COACH ORDER BY PARTICIPATIONS DESC;
SELECT NAME, TITLES FROM COACH ORDER BY TITLES DESC;
SELECT NAME, WINS FROM COACH ORDER BY WINS DESC;
SELECT NAME, DRAWS FROM COACH ORDER BY DRAWS DESC;
SELECT NAME, LOSSES FROM COACH ORDER BY LOSSES DESC;
SELECT NAME, GOALS_SCORED FROM COACH ORDER BY GOALS_SCORED DESC;
SELECT NAME, GOALS_AGAINST FROM COACH ORDER BY GOALS_AGAINST DESC;



-- Da tabela de jogadores
SELECT NAME, TITLES FROM PLAYER ORDER BY TITLES DESC;
SELECT NAME, WINS FROM PLAYER ORDER BY WINS DESC;
SELECT NAME, DRAWS FROM PLAYER ORDER BY DRAWS DESC;
SELECT NAME, LOSSES FROM PLAYER ORDER BY LOSSES DESC;
SELECT NAME, RED_CARDS FROM PLAYER ORDER BY RED_CARDS DESC;



-- Quantos gols saÃ­ram no primeiro tempo e segundo tempo e na prorrogaÃ§Ã£o nas finais de Copa.
SELECT
(SELECT COUNT(ID_GOAL) FROM GOAL
INNER JOIN GAME GM ON GM.ID_GAME = GOAL.GAME_ID
WHERE MINUTO <= 45 AND GM.DESCRIPTION LIKE 'Final%') AS `Gols nas Finais no Primeiro Tempo`,
(SELECT COUNT(ID_GOAL) FROM GOAL
INNER JOIN GAME GM ON GM.ID_GAME = GOAL.GAME_ID
WHERE MINUTO BETWEEN 45 AND 90 AND GM.DESCRIPTION LIKE 'Final%') AS `Gols nas Finais no Segundo Tempo`,
(SELECT COUNT(ID_GOAL) FROM GOAL
INNER JOIN GAME GM ON GM.ID_GAME = GOAL.GAME_ID
WHERE MINUTO > 90 AND GM.DESCRIPTION LIKE 'Final%') AS `Gols nas Finais na ProrrogaÃ§Ã£o`;



-- Quais os minutos de jogo que mais tiveram gols nas Finais
SELECT MINUTO, COUNT(ID_GOAL) AS `Quantidade de Gols` FROM GOAL
INNER JOIN GAME GM ON GM.ID_GAME = GOAL.GAME_ID AND GM.DESCRIPTION LIKE 'Final%'
GROUP BY MINUTO
ORDER BY `Quantidade de Gols` DESC;



-- Nome dos treinadores da seleÃ§Ã£o brasileira que disputaram finais de Copa do Mundo
-- Olha que bonito o nome do treinador da copa de 1962! :D
SELECT C.NAME, CONCAT(WC.YEAR, ' FIFA World Cup ', CT.NAME) AS `World Cup` FROM COACH C
INNER JOIN GAME G ON (G.HOME_COACH_ID = C.ID_COACH AND G.HOME_TEAM_ID = 4) 
OR (G.AWAY_COACH_ID = C.ID_COACH AND G.AWAY_TEAM_ID = 4)
INNER JOIN WORLD_CUP WC ON WC.ID_WORLD_CUP = G.WORLD_CUP_ID
INNER JOIN COUNTRY CT ON CT.ID_HOST = WC.HOST_ID
WHERE G.DESCRIPTION LIKE 'Final%'; 
